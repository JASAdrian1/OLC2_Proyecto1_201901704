
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftIGUALIGUALDIFERENTEMENORQUEMAYORQUEMENORIGUALMAYORIGUALleftMASMENOSleftPORDIVrightMODleftUMENOSAND AS BOOL BREAK CADENA CHAR COMA CORA CORC DECIMAL DIFERENTE DIV DOSP ELSE ENTERO F64 FALSE FN GUIONBAJO I64 ID IF IGUAL IGUALIGUAL LET LLAVEA LLAVEC LOOP MAS MATCH MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOS MOD MUT NOT OR ORMATCH PARA PARC POR POW POWF PRINTLN PYC STR STRING TRUE USIZE VEC VECN WHILEinicio : instrucciones\n    instrucciones : instrucciones instruccion\n                    | instruccion\n    instruccion : declaracion PYC\n                    | asignacion PYC\n                    | funcion\n                    | impresion PYC\n                    | sentencia_if\n                    | sentencia_match\n                    | bucle_loop\n                    | bucle_while\n                    | BREAK PYC\n    instrucciones_match : instrucciones_match instruccion_match\n                    | instruccion_match\n    instruccion_match : declaracion\n                        | asignacion\n                        | impresion\n                        | sentencia_if\n                        | sentencia_match\n                        | bucle_while\n                        | BREAK\n    declaracion : LET MUT lista_id DOSP tipo IGUAL expresion\n                    | LET MUT lista_id IGUAL expresion\n                    | LET lista_id DOSP tipo IGUAL expresion\n                    | LET lista_id IGUAL expresion\n    asignacion : ID IGUAL expresion\n                    | ID dimensiones_arreglo IGUAL expresion\n    lista_id : ID COMA lista_id\n                | ID\n    tipo : I64\n            | F64\n            | BOOL\n            | CHAR\n            | STRING\n            | STR\n            | CORA tipo PYC ENTERO CORC\n    dimensiones_arreglo : CORA expresion CORC dimensiones_arreglo\n                            | CORA expresion CORC\n    impresion : PRINTLN NOT PARA CADENA PARC\n                | PRINTLN NOT PARA CADENA COMA lista_expresiones PARC\n    lista_expresiones : lista_expresiones COMA expresion\n                        | expresion\n    sentencia_if : IF expresion LLAVEA instrucciones LLAVEC\n                    | IF expresion LLAVEA instrucciones LLAVEC ELSE  sentencia_if\n                    | IF expresion LLAVEA instrucciones LLAVEC ELSE LLAVEA instrucciones LLAVEC\n     sentencia_match : MATCH expresion LLAVEA lista_casos_match LLAVEC\n                        | MATCH expresion LLAVEA lista_casos_match GUIONBAJO IGUAL MAYORQUE instrucciones_match LLAVEC\n                        | MATCH expresion LLAVEA lista_casos_match GUIONBAJO IGUAL MAYORQUE instruccion_match COMA LLAVEC\n     lista_casos_match : lista_casos_match caso_match\n                        | caso_match\n     caso_match : opciones_match IGUAL MAYORQUE LLAVEA instrucciones LLAVEC\n                    | opciones_match IGUAL MAYORQUE instruccion_match COMA\n     opciones_match : opciones_match ORMATCH expresion\n                        | expresion\n     bucle_loop : LOOP LLAVEA instrucciones LLAVEC\n     bucle_while : WHILE expresion LLAVEA instrucciones LLAVEC\n     funcion : FN ID PARA lista_parametros PARC LLAVEA instrucciones LLAVEC\n                | FN ID PARA lista_parametros PARC MENOS MAYORQUE tipo LLAVEA instrucciones LLAVEC\n    lista_parametros : lista_parametros COMA parametro\n                        | parametro\n    parametro : ID\n    expresion : PARA expresion AS tipo PARC\n                | PARA expresion PARC\n                | ID CORA expresion CORC\n    expresion : I64 DOSP DOSP POW PARA expresion COMA expresion PARC\n                | F64 DOSP DOSP POWF PARA expresion COMA expresion PARC\n                | expresion MAS expresion\n                | expresion MENOS expresion\n                | expresion POR expresion\n                | expresion DIV expresion\n                | expresion MOD expresion\n                | MENOS expresion %prec UMENOS\n    expresion : NOT expresion %prec NOT\n                | expresion AND expresion\n                | expresion OR expresion\n\n    expresion : expresion IGUALIGUAL expresion\n                | expresion DIFERENTE expresion\n                | expresion MENORIGUAL expresion\n                | expresion MENORQUE expresion\n                | expresion MAYORIGUAL expresion\n                | expresion MAYORQUE expresion\n\n    expresion : ENTERO\n                | DECIMAL\n                | CADENA\n                | TRUE\n                | FALSE\n     expresion : ID\n     expresion : CORA expresion CORC\n    '
    
_lr_action_items = {'BREAK':([0,2,3,6,8,9,10,11,21,22,23,24,25,36,42,43,44,45,46,48,54,59,78,79,81,82,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,125,126,128,134,136,138,141,146,148,150,156,160,162,164,167,168,169,172,173,175,176,177,178,179,180,181,183,186,189,190,191,193,194,197,198,201,202,203,204,205,],[12,12,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-87,-82,-83,-84,-85,-86,12,-26,12,-72,-73,12,12,-25,-27,12,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-55,12,-23,-39,-43,-64,-46,-56,-24,12,-62,181,-22,12,-40,12,-44,181,12,-15,-16,-17,-18,-19,-20,-21,-57,12,181,-14,12,12,-45,-47,-13,12,-65,-66,-48,-58,]),'LET':([0,2,3,6,8,9,10,11,21,22,23,24,25,36,42,43,44,45,46,48,54,59,78,79,81,82,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,125,126,128,134,136,138,141,146,148,150,156,160,162,164,167,168,169,172,173,175,176,177,178,179,180,181,183,186,189,190,191,193,194,197,198,201,202,203,204,205,],[13,13,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-87,-82,-83,-84,-85,-86,13,-26,13,-72,-73,13,13,-25,-27,13,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-55,13,-23,-39,-43,-64,-46,-56,-24,13,-62,13,-22,13,-40,13,-44,13,13,-15,-16,-17,-18,-19,-20,-21,-57,13,13,-14,13,13,-45,-47,-13,13,-65,-66,-48,-58,]),'ID':([0,2,3,6,8,9,10,11,13,15,17,18,20,21,22,23,24,25,26,29,31,35,36,37,40,41,42,43,44,45,46,48,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,78,79,80,81,82,84,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,122,123,125,126,128,129,133,134,135,136,138,141,143,145,146,147,148,150,156,157,158,160,162,164,166,167,168,169,172,173,175,176,177,178,179,180,181,183,186,187,188,189,190,191,192,193,194,197,198,200,201,202,203,204,205,],[14,14,-3,-6,-8,-9,-10,-11,28,32,36,36,36,-2,-4,-5,-7,-12,28,36,36,36,-87,36,36,36,-82,-83,-84,-85,-86,14,36,28,-26,36,97,14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-72,-73,36,14,14,36,-25,-27,14,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,36,-50,-55,14,-23,36,97,-39,36,-43,-64,-46,-49,36,-56,36,-24,14,-62,36,36,14,-22,14,36,-40,14,-44,14,14,-15,-16,-17,-18,-19,-20,-21,-57,14,36,36,14,-14,14,-52,14,-45,-47,-13,-51,14,-65,-66,-48,-58,]),'FN':([0,2,3,6,8,9,10,11,21,22,23,24,25,48,59,81,82,101,125,126,136,141,146,150,164,168,169,173,183,186,191,193,194,197,201,204,205,],[15,15,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,15,15,15,15,15,-55,15,-43,-46,-56,15,15,15,-44,15,-57,15,15,15,-45,-47,15,-48,-58,]),'PRINTLN':([0,2,3,6,8,9,10,11,21,22,23,24,25,36,42,43,44,45,46,48,54,59,78,79,81,82,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,125,126,128,134,136,138,141,146,148,150,156,160,162,164,167,168,169,172,173,175,176,177,178,179,180,181,183,186,189,190,191,193,194,197,198,201,202,203,204,205,],[16,16,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-87,-82,-83,-84,-85,-86,16,-26,16,-72,-73,16,16,-25,-27,16,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-55,16,-23,-39,-43,-64,-46,-56,-24,16,-62,16,-22,16,-40,16,-44,16,16,-15,-16,-17,-18,-19,-20,-21,-57,16,16,-14,16,16,-45,-47,-13,16,-65,-66,-48,-58,]),'IF':([0,2,3,6,8,9,10,11,21,22,23,24,25,36,42,43,44,45,46,48,54,59,78,79,81,82,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,125,126,128,134,136,138,141,146,148,150,155,156,160,162,164,167,168,169,172,173,175,176,177,178,179,180,181,183,186,189,190,191,193,194,197,198,201,202,203,204,205,],[17,17,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-87,-82,-83,-84,-85,-86,17,-26,17,-72,-73,17,17,-25,-27,17,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-55,17,-23,-39,-43,-64,-46,-56,-24,17,17,-62,17,-22,17,-40,17,-44,17,17,-15,-16,-17,-18,-19,-20,-21,-57,17,17,-14,17,17,-45,-47,-13,17,-65,-66,-48,-58,]),'MATCH':([0,2,3,6,8,9,10,11,21,22,23,24,25,36,42,43,44,45,46,48,54,59,78,79,81,82,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,125,126,128,134,136,138,141,146,148,150,156,160,162,164,167,168,169,172,173,175,176,177,178,179,180,181,183,186,189,190,191,193,194,197,198,201,202,203,204,205,],[18,18,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-87,-82,-83,-84,-85,-86,18,-26,18,-72,-73,18,18,-25,-27,18,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-55,18,-23,-39,-43,-64,-46,-56,-24,18,-62,18,-22,18,-40,18,-44,18,18,-15,-16,-17,-18,-19,-20,-21,-57,18,18,-14,18,18,-45,-47,-13,18,-65,-66,-48,-58,]),'LOOP':([0,2,3,6,8,9,10,11,21,22,23,24,25,48,59,81,82,101,125,126,136,141,146,150,164,168,169,173,183,186,191,193,194,197,201,204,205,],[19,19,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,19,19,19,19,19,-55,19,-43,-46,-56,19,19,19,-44,19,-57,19,19,19,-45,-47,19,-48,-58,]),'WHILE':([0,2,3,6,8,9,10,11,21,22,23,24,25,36,42,43,44,45,46,48,54,59,78,79,81,82,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,125,126,128,134,136,138,141,146,148,150,156,160,162,164,167,168,169,172,173,175,176,177,178,179,180,181,183,186,189,190,191,193,194,197,198,201,202,203,204,205,],[20,20,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-87,-82,-83,-84,-85,-86,20,-26,20,-72,-73,20,20,-25,-27,20,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-55,20,-23,-39,-43,-64,-46,-56,-24,20,-62,20,-22,20,-40,20,-44,20,20,-15,-16,-17,-18,-19,-20,-21,-57,20,20,-14,20,20,-45,-47,-13,20,-65,-66,-48,-58,]),'$end':([1,2,3,6,8,9,10,11,21,22,23,24,25,125,136,141,146,169,183,194,197,204,205,],[0,-1,-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-55,-43,-46,-56,-44,-57,-45,-47,-48,-58,]),'LLAVEC':([3,6,8,9,10,11,21,22,23,24,25,36,42,43,44,45,46,54,78,79,81,93,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,122,123,125,126,128,134,136,138,141,143,146,148,156,162,164,167,169,175,176,177,178,179,180,181,183,186,189,190,191,192,194,197,198,199,200,201,202,203,204,205,],[-3,-6,-8,-9,-10,-11,-2,-4,-5,-7,-12,-87,-82,-83,-84,-85,-86,-26,-72,-73,125,-25,-27,136,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,141,-50,-55,146,-23,-39,-43,-64,-46,-49,-56,-24,-62,-22,183,-40,-44,-15,-16,-17,-18,-19,-20,-21,-57,194,197,-14,200,-52,-45,-47,-13,204,-51,205,-65,-66,-48,-58,]),'PYC':([4,5,7,12,36,42,43,44,45,46,54,78,79,86,87,88,89,90,91,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,128,130,134,138,148,156,162,167,182,202,203,],[22,23,24,25,-87,-82,-83,-84,-85,-86,-26,-72,-73,-30,-31,-32,-33,-34,-35,-25,-27,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-23,149,-39,-64,-24,-62,-22,-40,-36,-65,-66,]),'MUT':([13,],[26,]),'IGUAL':([14,27,28,30,36,42,43,44,45,46,50,78,79,85,86,87,88,89,90,91,94,96,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,121,124,127,131,138,142,156,161,182,202,203,],[29,52,-29,55,-87,-82,-83,-84,-85,-86,84,-72,-73,129,-30,-31,-32,-33,-34,-35,-28,-38,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-54,144,147,-37,-64,159,-62,-53,-36,-65,-66,]),'CORA':([14,17,18,20,29,31,35,36,37,40,41,51,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,83,84,92,96,115,122,123,129,135,143,145,147,157,158,165,166,187,188,192,200,],[31,37,37,37,37,37,37,74,37,37,37,92,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,92,37,92,31,92,37,-50,37,37,-49,37,37,37,37,92,37,37,37,-52,-51,]),'NOT':([16,17,18,20,29,31,35,37,40,41,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,123,129,135,143,145,147,157,158,166,187,188,192,200,],[33,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-50,41,41,-49,41,41,41,41,41,41,41,-52,-51,]),'PARA':([17,18,20,29,31,32,33,35,37,40,41,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,123,129,135,139,140,143,145,147,157,158,166,187,188,192,200,],[35,35,35,35,35,57,58,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-50,35,35,157,158,-49,35,35,35,35,35,35,35,-52,-51,]),'I64':([17,18,20,29,31,35,37,40,41,51,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,83,84,92,115,122,123,129,135,143,145,147,157,158,165,166,187,188,192,200,],[38,38,38,38,38,38,38,38,38,86,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,86,38,86,86,38,-50,38,38,-49,38,38,38,38,86,38,38,38,-52,-51,]),'F64':([17,18,20,29,31,35,37,40,41,51,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,83,84,92,115,122,123,129,135,143,145,147,157,158,165,166,187,188,192,200,],[39,39,39,39,39,39,39,39,39,87,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,87,39,87,87,39,-50,39,39,-49,39,39,39,39,87,39,39,39,-52,-51,]),'MENOS':([17,18,20,29,31,34,35,36,37,40,41,42,43,44,45,46,47,49,52,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,84,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,122,123,128,129,132,135,138,143,145,147,148,154,156,157,158,161,162,166,170,171,185,187,188,192,195,196,200,202,203,],[40,40,40,40,40,61,40,-87,40,40,40,-82,-83,-84,-85,-86,61,61,40,61,40,61,40,40,40,40,40,40,40,40,40,40,40,40,40,61,40,61,-72,61,40,40,61,61,-67,-68,-69,-70,-71,61,61,61,61,61,61,61,61,-63,61,-88,61,40,-50,61,40,151,40,-64,-49,40,40,61,61,-62,40,40,61,61,40,61,61,61,40,40,-52,61,61,-51,-65,-66,]),'ENTERO':([17,18,20,29,31,35,37,40,41,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,123,129,135,143,145,147,149,157,158,166,187,188,192,200,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-50,42,42,-49,42,42,163,42,42,42,42,42,-52,-51,]),'DECIMAL':([17,18,20,29,31,35,37,40,41,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,123,129,135,143,145,147,157,158,166,187,188,192,200,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-50,43,43,-49,43,43,43,43,43,43,43,-52,-51,]),'CADENA':([17,18,20,29,31,35,37,40,41,52,55,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,123,129,135,143,145,147,157,158,166,187,188,192,200,],[44,44,44,44,44,44,44,44,44,44,44,100,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-50,44,44,-49,44,44,44,44,44,44,44,-52,-51,]),'TRUE':([17,18,20,29,31,35,37,40,41,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,123,129,135,143,145,147,157,158,166,187,188,192,200,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-50,45,45,-49,45,45,45,45,45,45,45,-52,-51,]),'FALSE':([17,18,20,29,31,35,37,40,41,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,123,129,135,143,145,147,157,158,166,187,188,192,200,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-50,46,46,-49,46,46,46,46,46,46,46,-52,-51,]),'LLAVEA':([19,34,36,42,43,44,45,46,47,49,78,79,86,87,88,89,90,91,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,132,138,155,156,160,182,184,202,203,],[48,59,-87,-82,-83,-84,-85,-86,80,82,-72,-73,-30,-31,-32,-33,-34,-35,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,150,-64,168,-62,173,-36,193,-65,-66,]),'DOSP':([27,28,38,39,50,76,77,94,],[51,-29,76,77,83,119,120,-28,]),'COMA':([28,36,42,43,44,45,46,54,78,79,93,95,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,128,134,136,138,141,146,148,152,153,154,156,162,167,169,170,171,174,175,176,177,178,179,180,181,185,190,194,197,202,203,204,],[53,-87,-82,-83,-84,-85,-86,-26,-72,-73,-25,-27,-61,133,-60,135,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-23,-39,-43,-64,-46,-56,-24,-59,166,-42,-62,-22,-40,-44,187,188,192,-15,-16,-17,-18,-19,-20,-21,-41,199,-45,-47,-65,-66,-48,]),'MAS':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[60,-87,-82,-83,-84,-85,-86,60,60,60,60,60,60,-72,60,60,60,-67,-68,-69,-70,-71,60,60,60,60,60,60,60,60,-63,60,-88,60,60,-64,60,60,-62,60,60,60,60,60,60,60,-65,-66,]),'POR':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[62,-87,-82,-83,-84,-85,-86,62,62,62,62,62,62,-72,62,62,62,62,62,-69,-70,-71,62,62,62,62,62,62,62,62,-63,62,-88,62,62,-64,62,62,-62,62,62,62,62,62,62,62,-65,-66,]),'DIV':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[63,-87,-82,-83,-84,-85,-86,63,63,63,63,63,63,-72,63,63,63,63,63,-69,-70,-71,63,63,63,63,63,63,63,63,-63,63,-88,63,63,-64,63,63,-62,63,63,63,63,63,63,63,-65,-66,]),'MOD':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[64,-87,-82,-83,-84,-85,-86,64,64,64,64,64,64,-72,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-63,64,-88,64,64,-64,64,64,-62,64,64,64,64,64,64,64,-65,-66,]),'AND':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[65,-87,-82,-83,-84,-85,-86,65,65,65,65,65,65,-72,-73,65,65,-67,-68,-69,-70,-71,-74,65,-76,-77,-78,-79,-80,-81,-63,65,-88,65,65,-64,65,65,-62,65,65,65,65,65,65,65,-65,-66,]),'OR':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[66,-87,-82,-83,-84,-85,-86,66,66,66,66,66,66,-72,-73,66,66,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,66,-88,66,66,-64,66,66,-62,66,66,66,66,66,66,66,-65,-66,]),'IGUALIGUAL':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[67,-87,-82,-83,-84,-85,-86,67,67,67,67,67,67,-72,67,67,67,-67,-68,-69,-70,-71,67,67,-76,-77,-78,-79,-80,-81,-63,67,-88,67,67,-64,67,67,-62,67,67,67,67,67,67,67,-65,-66,]),'DIFERENTE':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[68,-87,-82,-83,-84,-85,-86,68,68,68,68,68,68,-72,68,68,68,-67,-68,-69,-70,-71,68,68,-76,-77,-78,-79,-80,-81,-63,68,-88,68,68,-64,68,68,-62,68,68,68,68,68,68,68,-65,-66,]),'MENORIGUAL':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[69,-87,-82,-83,-84,-85,-86,69,69,69,69,69,69,-72,69,69,69,-67,-68,-69,-70,-71,69,69,-76,-77,-78,-79,-80,-81,-63,69,-88,69,69,-64,69,69,-62,69,69,69,69,69,69,69,-65,-66,]),'MENORQUE':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[70,-87,-82,-83,-84,-85,-86,70,70,70,70,70,70,-72,70,70,70,-67,-68,-69,-70,-71,70,70,-76,-77,-78,-79,-80,-81,-63,70,-88,70,70,-64,70,70,-62,70,70,70,70,70,70,70,-65,-66,]),'MAYORIGUAL':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,148,154,156,161,162,170,171,185,195,196,202,203,],[71,-87,-82,-83,-84,-85,-86,71,71,71,71,71,71,-72,71,71,71,-67,-68,-69,-70,-71,71,71,-76,-77,-78,-79,-80,-81,-63,71,-88,71,71,-64,71,71,-62,71,71,71,71,71,71,71,-65,-66,]),'MAYORQUE':([34,36,42,43,44,45,46,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,121,128,138,144,148,151,154,156,159,161,162,170,171,185,195,196,202,203,],[72,-87,-82,-83,-84,-85,-86,72,72,72,72,72,72,-72,72,72,72,-67,-68,-69,-70,-71,72,72,-76,-77,-78,-79,-80,-81,-63,72,-88,72,72,-64,160,72,165,72,-62,172,72,72,72,72,72,72,72,-65,-66,]),'CORC':([36,42,43,44,45,46,56,75,78,79,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,138,156,163,202,203,],[-87,-82,-83,-84,-85,-86,96,118,-72,-73,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,138,-88,-64,-62,182,-65,-66,]),'AS':([36,42,43,44,45,46,73,78,79,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,138,156,202,203,],[-87,-82,-83,-84,-85,-86,115,-72,-73,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-64,-62,-65,-66,]),'PARC':([36,42,43,44,45,46,73,78,79,86,87,88,89,90,91,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,137,138,152,153,154,156,182,185,195,196,202,203,],[-87,-82,-83,-84,-85,-86,116,-72,-73,-30,-31,-32,-33,-34,-35,-61,132,-60,134,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,156,-64,-59,167,-42,-62,-36,-41,202,203,-65,-66,]),'ORMATCH':([36,42,43,44,45,46,78,79,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,121,124,138,156,161,202,203,],[-87,-82,-83,-84,-85,-86,-72,-73,-67,-68,-69,-70,-71,-74,-75,-76,-77,-78,-79,-80,-81,-63,-88,-54,145,-64,-62,-53,-65,-66,]),'BOOL':([51,83,92,115,165,],[88,88,88,88,88,]),'CHAR':([51,83,92,115,165,],[89,89,89,89,89,]),'STRING':([51,83,92,115,165,],[90,90,90,90,90,]),'STR':([51,83,92,115,165,],[91,91,91,91,91,]),'POW':([119,],[139,]),'POWF':([120,],[140,]),'GUIONBAJO':([122,123,143,192,200,],[142,-50,-49,-52,-51,]),'ELSE':([136,],[155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,48,59,82,150,168,173,193,],[2,81,101,126,164,186,191,201,]),'instruccion':([0,2,48,59,81,82,101,126,150,164,168,173,186,191,193,201,],[3,21,3,3,21,3,21,21,3,21,3,3,21,21,3,21,]),'declaracion':([0,2,48,59,81,82,101,126,150,160,164,168,172,173,186,189,191,193,201,],[4,4,4,4,4,4,4,4,4,175,4,4,175,4,4,175,4,4,4,]),'asignacion':([0,2,48,59,81,82,101,126,150,160,164,168,172,173,186,189,191,193,201,],[5,5,5,5,5,5,5,5,5,176,5,5,176,5,5,176,5,5,5,]),'funcion':([0,2,48,59,81,82,101,126,150,164,168,173,186,191,193,201,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'impresion':([0,2,48,59,81,82,101,126,150,160,164,168,172,173,186,189,191,193,201,],[7,7,7,7,7,7,7,7,7,177,7,7,177,7,7,177,7,7,7,]),'sentencia_if':([0,2,48,59,81,82,101,126,150,155,160,164,168,172,173,186,189,191,193,201,],[8,8,8,8,8,8,8,8,8,169,178,8,8,178,8,8,178,8,8,8,]),'sentencia_match':([0,2,48,59,81,82,101,126,150,160,164,168,172,173,186,189,191,193,201,],[9,9,9,9,9,9,9,9,9,179,9,9,179,9,9,179,9,9,9,]),'bucle_loop':([0,2,48,59,81,82,101,126,150,164,168,173,186,191,193,201,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'bucle_while':([0,2,48,59,81,82,101,126,150,160,164,168,172,173,186,189,191,193,201,],[11,11,11,11,11,11,11,11,11,180,11,11,180,11,11,180,11,11,11,]),'lista_id':([13,26,53,],[27,50,94,]),'dimensiones_arreglo':([14,96,],[30,131,]),'expresion':([17,18,20,29,31,35,37,40,41,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,84,122,129,135,145,147,157,158,166,187,188,],[34,47,49,54,56,73,75,78,79,93,95,102,103,104,105,106,107,108,109,110,111,112,113,114,117,121,128,121,148,154,161,162,170,171,185,195,196,]),'tipo':([51,83,92,115,165,],[85,127,130,137,184,]),'lista_parametros':([57,],[98,]),'parametro':([57,133,],[99,152,]),'lista_casos_match':([80,],[122,]),'caso_match':([80,122,],[123,143,]),'opciones_match':([80,122,],[124,124,]),'lista_expresiones':([135,],[153,]),'instruccion_match':([160,172,189,],[174,190,198,]),'instrucciones_match':([172,],[189,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','gramatica.py',177),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',183),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',184),
  ('instruccion -> declaracion PYC','instruccion',2,'p_instruccion','gramatica.py',195),
  ('instruccion -> asignacion PYC','instruccion',2,'p_instruccion','gramatica.py',196),
  ('instruccion -> funcion','instruccion',1,'p_instruccion','gramatica.py',197),
  ('instruccion -> impresion PYC','instruccion',2,'p_instruccion','gramatica.py',198),
  ('instruccion -> sentencia_if','instruccion',1,'p_instruccion','gramatica.py',199),
  ('instruccion -> sentencia_match','instruccion',1,'p_instruccion','gramatica.py',200),
  ('instruccion -> bucle_loop','instruccion',1,'p_instruccion','gramatica.py',201),
  ('instruccion -> bucle_while','instruccion',1,'p_instruccion','gramatica.py',202),
  ('instruccion -> BREAK PYC','instruccion',2,'p_instruccion','gramatica.py',203),
  ('instrucciones_match -> instrucciones_match instruccion_match','instrucciones_match',2,'p_instrucciones_match','gramatica.py',215),
  ('instrucciones_match -> instruccion_match','instrucciones_match',1,'p_instrucciones_match','gramatica.py',216),
  ('instruccion_match -> declaracion','instruccion_match',1,'p_instruccion_match','gramatica.py',227),
  ('instruccion_match -> asignacion','instruccion_match',1,'p_instruccion_match','gramatica.py',228),
  ('instruccion_match -> impresion','instruccion_match',1,'p_instruccion_match','gramatica.py',229),
  ('instruccion_match -> sentencia_if','instruccion_match',1,'p_instruccion_match','gramatica.py',230),
  ('instruccion_match -> sentencia_match','instruccion_match',1,'p_instruccion_match','gramatica.py',231),
  ('instruccion_match -> bucle_while','instruccion_match',1,'p_instruccion_match','gramatica.py',232),
  ('instruccion_match -> BREAK','instruccion_match',1,'p_instruccion_match','gramatica.py',233),
  ('declaracion -> LET MUT lista_id DOSP tipo IGUAL expresion','declaracion',7,'p_declaracion','gramatica.py',241),
  ('declaracion -> LET MUT lista_id IGUAL expresion','declaracion',5,'p_declaracion','gramatica.py',242),
  ('declaracion -> LET lista_id DOSP tipo IGUAL expresion','declaracion',6,'p_declaracion','gramatica.py',243),
  ('declaracion -> LET lista_id IGUAL expresion','declaracion',4,'p_declaracion','gramatica.py',244),
  ('asignacion -> ID IGUAL expresion','asignacion',3,'p_asignacion','gramatica.py',261),
  ('asignacion -> ID dimensiones_arreglo IGUAL expresion','asignacion',4,'p_asignacion','gramatica.py',262),
  ('lista_id -> ID COMA lista_id','lista_id',3,'p_lista_id','gramatica.py',269),
  ('lista_id -> ID','lista_id',1,'p_lista_id','gramatica.py',270),
  ('tipo -> I64','tipo',1,'p_tipo','gramatica.py',281),
  ('tipo -> F64','tipo',1,'p_tipo','gramatica.py',282),
  ('tipo -> BOOL','tipo',1,'p_tipo','gramatica.py',283),
  ('tipo -> CHAR','tipo',1,'p_tipo','gramatica.py',284),
  ('tipo -> STRING','tipo',1,'p_tipo','gramatica.py',285),
  ('tipo -> STR','tipo',1,'p_tipo','gramatica.py',286),
  ('tipo -> CORA tipo PYC ENTERO CORC','tipo',5,'p_tipo','gramatica.py',287),
  ('dimensiones_arreglo -> CORA expresion CORC dimensiones_arreglo','dimensiones_arreglo',4,'p_dimensiones_arreglo','gramatica.py',296),
  ('dimensiones_arreglo -> CORA expresion CORC','dimensiones_arreglo',3,'p_dimensiones_arreglo','gramatica.py',297),
  ('impresion -> PRINTLN NOT PARA CADENA PARC','impresion',5,'p_impresion','gramatica.py',303),
  ('impresion -> PRINTLN NOT PARA CADENA COMA lista_expresiones PARC','impresion',7,'p_impresion','gramatica.py',304),
  ('lista_expresiones -> lista_expresiones COMA expresion','lista_expresiones',3,'p_lista_expresion','gramatica.py',313),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresion','gramatica.py',314),
  ('sentencia_if -> IF expresion LLAVEA instrucciones LLAVEC','sentencia_if',5,'p_sentencia_if','gramatica.py',329),
  ('sentencia_if -> IF expresion LLAVEA instrucciones LLAVEC ELSE sentencia_if','sentencia_if',7,'p_sentencia_if','gramatica.py',330),
  ('sentencia_if -> IF expresion LLAVEA instrucciones LLAVEC ELSE LLAVEA instrucciones LLAVEC','sentencia_if',9,'p_sentencia_if','gramatica.py',331),
  ('sentencia_match -> MATCH expresion LLAVEA lista_casos_match LLAVEC','sentencia_match',5,'p_sentencia_match','gramatica.py',343),
  ('sentencia_match -> MATCH expresion LLAVEA lista_casos_match GUIONBAJO IGUAL MAYORQUE instrucciones_match LLAVEC','sentencia_match',9,'p_sentencia_match','gramatica.py',344),
  ('sentencia_match -> MATCH expresion LLAVEA lista_casos_match GUIONBAJO IGUAL MAYORQUE instruccion_match COMA LLAVEC','sentencia_match',10,'p_sentencia_match','gramatica.py',345),
  ('lista_casos_match -> lista_casos_match caso_match','lista_casos_match',2,'p_lista_casos_match','gramatica.py',355),
  ('lista_casos_match -> caso_match','lista_casos_match',1,'p_lista_casos_match','gramatica.py',356),
  ('caso_match -> opciones_match IGUAL MAYORQUE LLAVEA instrucciones LLAVEC','caso_match',6,'p_casos_match','gramatica.py',367),
  ('caso_match -> opciones_match IGUAL MAYORQUE instruccion_match COMA','caso_match',5,'p_casos_match','gramatica.py',368),
  ('opciones_match -> opciones_match ORMATCH expresion','opciones_match',3,'p_opciones_match','gramatica.py',377),
  ('opciones_match -> expresion','opciones_match',1,'p_opciones_match','gramatica.py',378),
  ('bucle_loop -> LOOP LLAVEA instrucciones LLAVEC','bucle_loop',4,'p_loop','gramatica.py',393),
  ('bucle_while -> WHILE expresion LLAVEA instrucciones LLAVEC','bucle_while',5,'p_while','gramatica.py',400),
  ('funcion -> FN ID PARA lista_parametros PARC LLAVEA instrucciones LLAVEC','funcion',8,'p_funcion','gramatica.py',408),
  ('funcion -> FN ID PARA lista_parametros PARC MENOS MAYORQUE tipo LLAVEA instrucciones LLAVEC','funcion',11,'p_funcion','gramatica.py',409),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','gramatica.py',413),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','gramatica.py',414),
  ('parametro -> ID','parametro',1,'p_parametro','gramatica.py',418),
  ('expresion -> PARA expresion AS tipo PARC','expresion',5,'p_expresion','gramatica.py',425),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion','gramatica.py',426),
  ('expresion -> ID CORA expresion CORC','expresion',4,'p_expresion','gramatica.py',427),
  ('expresion -> I64 DOSP DOSP POW PARA expresion COMA expresion PARC','expresion',9,'p_expresion_aritmeticas','gramatica.py',432),
  ('expresion -> F64 DOSP DOSP POWF PARA expresion COMA expresion PARC','expresion',9,'p_expresion_aritmeticas','gramatica.py',433),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_aritmeticas','gramatica.py',434),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_aritmeticas','gramatica.py',435),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_aritmeticas','gramatica.py',436),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_aritmeticas','gramatica.py',437),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_aritmeticas','gramatica.py',438),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_aritmeticas','gramatica.py',439),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica','gramatica.py',452),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','gramatica.py',453),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','gramatica.py',454),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',461),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion_relacional','gramatica.py',462),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',463),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_relacional','gramatica.py',464),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_relacional','gramatica.py',465),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_relacional','gramatica.py',466),
  ('expresion -> ENTERO','expresion',1,'p_expresion_primitivos','gramatica.py',473),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_primitivos','gramatica.py',474),
  ('expresion -> CADENA','expresion',1,'p_expresion_primitivos','gramatica.py',475),
  ('expresion -> TRUE','expresion',1,'p_expresion_primitivos','gramatica.py',476),
  ('expresion -> FALSE','expresion',1,'p_expresion_primitivos','gramatica.py',477),
  ('expresion -> ID','expresion',1,'p_expresion_id','gramatica.py',496),
  ('expresion -> CORA expresion CORC','expresion',3,'p_expresion_arreglo','gramatica.py',501),
]
